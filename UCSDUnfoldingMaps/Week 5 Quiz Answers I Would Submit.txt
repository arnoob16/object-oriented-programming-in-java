1.  yes
2.  EarthquakeMarker and CityMarker
3.  CityMarker did not implement the drawMarker method, which is abstract in CommonMarker
4.  The draw method, the setClicked method that allows the user to set the "clicked" state of the marker
5.  They are member variables of the PApplet class and are inherited by EarthquakeCityMap
6.  answer is EarthquakeMarker and CityMarker, although in my code that text() call is actually in CommonMarker, because they share so much common code.  for class I don't expect people would have factored it back out.
7.  If no city is clicked, this code will hide all the cities (instead of leaving them alone like it is supposed to).
8.  if lastClicked is null then call findMarkerIClicked() to locate the clicked marker.  That marker might be null; if it is not, then remember it in lastClicked, use setClicked to set its clicked property, and call showThreatCircleOnly() passing in all quake markers and city markers.  If findMarkerIClicked() returns null, no marker got clicked so do nothing, just exit.

If lastClicked was not null, then set its clicked property to false, then null out lastClicked and unhide all markers.

findMarkerIClicked() loops over the quake markers and then the city markers, asking each marker if mouseX, mouseY is inside that marker.  If so, that marker is returned, cast to an EarthquakeMarker or CityMarker as appropriate; otherwise null is returned to indicate no marker got clicked.  That casting allows polymorphic handling of the threat circle display.

showThreatCircleOnly() is a polymorphic method.  It receives the list of quake markers and city markers.  If a quake marker invokes it, it hides all quakes except the calling quake's marker.  It loops over all cities and sets their hidden property using city.getDistanceTo(myLocation) > threatRadius, where myLocation is the location of this quake and threadRadius is the result of calling threatCircle() for this quake.

If a city marker invokes showThreatCircleOnly(), it hides all cities other than itself.  Then it loops over all quakes, setting their hidden property using quake.getDistanceTo(myLocation) > quake.threatCircle(), where myLocation is the location of this city.
9.  4
